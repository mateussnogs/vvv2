package model;
// Generated 14-Mar-2016 19:47:15 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.*;
import org.hibernate.validator.constraints.*;
import org.hibernate.validator.constraints.br.CPF;

/**
 * Funcionario generated by hbm2java
 */
@Entity
@Table(name="funcionario"
    ,catalog="vvv"
    , uniqueConstraints = {@UniqueConstraint(columnNames="cpf"), @UniqueConstraint(columnNames="usuario")} 
)
public class Funcionario  implements java.io.Serializable {


     private Integer id;
     
     @NotBlank(message = "VAZIO")
     @Size(min = 2, max = 256, message = "TAMANHO")
     private String nome;
     
     @NotBlank(message = "VAZIO")
     @Size(min = 3, max = 256, message = "TAMANHO")
     private String endereco;
     
     @NotBlank(message = "VAZIO")
     @Size(min = 3, max = 32, message = "TAMANHO")
     private String telefone;
     
     private int    cargo;
     
     private byte[] senha;
     
     @NotBlank(message = "VAZIO")
     @Size(min = 6, max = 32, message = "TAMANHO")
     private String usuario;
     
     @NotBlank(message = "VAZIO")
     @CPF(message = "TAMANHO")
     private String cpf;
     private Set<Reserva> reservas = new HashSet<>(0);
     private Set<PontodevendaFuncionario> pontodevendaFuncionarios = new HashSet<>(0);
     private Set<Pontodevenda> pontodevendas = new HashSet<>(0);

    public Funcionario() {
    }
	
    public Funcionario(String nome, String endereco, String telefone, int cargo, byte[] senha, String usuario, String cpf) {
        this.nome = nome;
        this.endereco = endereco;
        this.telefone = telefone;
        this.cargo = cargo;
        this.senha = senha;
        this.usuario = usuario;
        this.cpf = cpf;
    }
    public Funcionario(String nome, String endereco, String telefone, int cargo, byte[] senha, String usuario, String cpf, Set<Reserva> reservas, Set<PontodevendaFuncionario> pontodevendaFuncionarios, Set<Pontodevenda> pontodevendas) {
       this.nome = nome;
       this.endereco = endereco;
       this.telefone = telefone;
       this.cargo = cargo;
       this.senha = senha;
       this.usuario = usuario;
       this.cpf = cpf;
       this.reservas = reservas;
       this.pontodevendaFuncionarios = pontodevendaFuncionarios;
       this.pontodevendas = pontodevendas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="nome", nullable=false)
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="endereco", nullable=false)
    public String getEndereco() {
        return this.endereco;
    }
    
    public void setEndereco(String endereco) {
        this.endereco = endereco;
    }

    
    @Column(name="telefone", nullable=false, length=32)
    public String getTelefone() {
        return this.telefone;
    }
    
    public void setTelefone(String telefone) {
        this.telefone = telefone;
    }

    
    @Column(name="cargo", nullable=false)
    public int getCargo() {
        return this.cargo;
    }
    
    public void setCargo(int cargo) {
        this.cargo = cargo;
    }

    
    @Column(name="senha", nullable=false)
    public byte[] getSenha() {
        return this.senha;
    }
    
    public void setSenha(byte[] senha) {
        this.senha = senha;
    }

    
    @Column(name="usuario", unique=true, nullable=false, length=32)
    public String getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="cpf", unique=true, nullable=false, length=11)
    public String getCpf() {
        return this.cpf;
    }
    
    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="funcionario")
    public Set<Reserva> getReservas() {
        return this.reservas;
    }
    
    public void setReservas(Set<Reserva> reservas) {
        this.reservas = reservas;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="funcionario")
    public Set<PontodevendaFuncionario> getPontodevendaFuncionarios() {
        return this.pontodevendaFuncionarios;
    }
    
    public void setPontodevendaFuncionarios(Set<PontodevendaFuncionario> pontodevendaFuncionarios) {
        this.pontodevendaFuncionarios = pontodevendaFuncionarios;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="funcionario_has_pontodevenda", catalog="vvv", joinColumns = { 
        @JoinColumn(name="Funcionario_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="PontoDeVenda_id", nullable=false, updatable=false) })
    public Set<Pontodevenda> getPontodevendas() {
        return this.pontodevendas;
    }
    
    public void setPontodevendas(Set<Pontodevenda> pontodevendas) {
        this.pontodevendas = pontodevendas;
    }




}


